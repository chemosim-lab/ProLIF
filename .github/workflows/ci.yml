name: tests
on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    shell: bash -l {0}

concurrency:
  group: "${{ github.ref }}-${{ github.head_ref }}"
  cancel-in-progress: true

jobs:
  build:
    name: Build
    # only run once if internal PR
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    uses: ./.github/workflows/_build-package.yml
    with:
      check-prerelease: ${{ github.event_name == 'workflow_dispatch' }}
      cache-package: true
      upload-package: true
      test-files: true
      test-imports: true

  unit-tests:
    name: Test ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    # only run once if internal PR
    if: github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository
    strategy:
      matrix:
        include:
          - label: earliest
            os: ubuntu-latest
            python-version: 3.8
            rdkit-version: "rdkit=2021.03.1"
            coverage: false
          - label: baseline
            os: ubuntu-latest
            python-version: "3.10"
            rdkit-version: "rdkit~=2022.09"
            coverage: true
          - label: latest
            os: ubuntu-latest
            python-version: "3.12"
            rdkit-version: "rdkit"
            coverage: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          auto-update-conda: true
          channel-priority: flexible
          channels: conda-forge, defaults
          add-pip-as-python-dependency: true
          architecture: x64
          use-mamba: true
          miniforge-variant: Mambaforge

      - name: Check conda and pip
        run: |
          which python
          python --version
          pip --version
          conda --version
          mamba --version

      - name: Install conda dependencies
        run: |
          mamba install ${{ matrix.rdkit-version }}
          mamba list

      - name: Install package through pip
        run: |
          pip install .[dev]
          pip list

      - name: Run tests
        run: |
          pytest --color=yes --disable-pytest-warnings --cov=prolif --cov-report=xml tests/

      - name: Measure tests coverage
        if: matrix.coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}
